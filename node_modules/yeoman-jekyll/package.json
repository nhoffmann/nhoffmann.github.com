{
  "author": {
    "name": "mklabs"
  },
  "name": "yeoman-jekyll",
  "description": "Yeoman generators and Grunt tasks to work with Jekyll sites",
  "version": "0.0.1",
  "repository": {
    "type": "git",
    "url": "git://github.com/mklabs/mklabs.github.com.git"
  },
  "dependencies": {
    "yeoman-generators": "http://github.com/yeoman/generators/tarball/master",
    "cheerio": "~0.10.1",
    "request": "~2.11.4",
    "underscore": "~1.4.2"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "readme": "yeoman-jekyll\n=============\n\nInstall\n-------\n\nGrab dev dependencies (yeoman generators & grunt tasks). In the Jekyll website root.\n\n    npm install http://github.com/mklabs/yeoman-jekyll/tarball/master\n\nInstall Jekyll locally\n\n    gem install jekyll rdiscount\n\nCommands\n--------\n\nTo enable below commans, project gruntfile should load the plugin tasks:\n\n```js\ngrunt.loadNpmTasks('yeoman-jekyll');\n```\n\n**Run the build script**\n\n    yeoman build\n\nThis will compile the Jekyll website in the intermediate directory `_temp/`, go\nthrough yeoman build script, and finally copy the result over `_site/`\n\n\n**preview server**\n\n    yeoman server\n\nThis will run Jekyll with the default configuration setup in `_config.yml`.\nBoth `auto` and `server` options should be turned on. Jekyll will watch for\nmodifications and rebuilt automatically in `_site`.\n\nYeoman / Grunt are configured to watch any files with `_site` directory, and\nwill start a LiveReload compatible server on port `35729`.\n\nInstall the LiveReload extensions, visit `http://localhost:4000` (default\nhostname / port, you change it in the `_config.yml`), click the\nLR icon, connection should establish and you can then enjoy the live reloading\nof your Jekyll website.\n\nGenerators\n----------\n\n`yeoman-jekyll` defines the following generators:\n\n- gruntfile:jekyll\n- jekyll\n\n**yeoman init jekyll -h**\n\nGenerator based on [@necolas'\njekyll-boilerplate](https://github.com/necolas/jekyll-boilerplate), with some\nability to wire up some of the GitHub Page theme.\n\n    Usage:\n      yeoman init jekyll LOCATION [options]\n\n    Options:\n      -h, --help       # Print generator's options and usage\n                       # Default: false\n          --theme      # Choose a theme from the following GitHub page templates:\n                         - orderedlist/modernist\n                         - orderedlist/minimal\n                         - mattgraham/Midnight\n                         - jsncostello/slate\n                         - mattgraham/Leap-Day\n                         - jonrohan/time-machine-theme\n                         - cameronmcefee/merlot\n                         - broccolini/dinky\n                         - tactile\n                       # Default: tactile\n          --gruntfile  # Gruntfile to be invoked\n                       # Default:\n\n    Description:\n        Yeoman generator based on @necolas' Jekyll Boilerplate.\n\n        This generator will simply fetch the latest state of jekyll-boilerplate's\n        master branch (unless the content is already cached by yeoman at\n        `~/.yeoman/cache/necolas/jekyll-boilerplate)` in the `location` argument\n        provided.\n\n    Arguments:\n\n        - location: Defaults to current working directory. Base directory to copy\n                    the content of the remote template.\n\n    Tasks:\n\n        This generator will also generate:\n\n          - a basic Gruntfile if none were found\n          - a tasks/ directory with:\n            - server: Override the built-in server command to run Jekyll instead.\n\n    Example:\n\n        yeoman init jekyll\n\n        This will create:\n            .\n            |-- .gitignore\n            |-- README\n            |-- _config.yml\n            |-- _layouts\n            |   |-- default.html\n            |   |-- post.html\n            |-- _includes\n            |-- _posts\n            |   |-- 1970-01-01-placeholder-post.md\n            |-- index.html\n\n**yeoman init gruntfile:jekyll -h**\n\nInvoked by `jekyll` generator as hook, but can be triggered directly to\ngenerate only the grunt configuration, or update an existing one.\n\n    Usage:\n      yeoman init gruntfile:jekyll  [options]\n\n    Options:\n      -h, --help  # Print generator's options and usage\n                  # Default: false\n\n    Description:\n        This generator is here to help with the setup of grunt / yeoman\n        configuration on Jekyll based websites.\n\n        It'll scan the current working directory for key-directories and known file\n        patterns. You'll then be asked for confirmation on each of these directory,\n        with sensitive defaults, or suggestion based on the current file structure.\n\n        ex. A lookup is performed on the current working directory for CSS (and\n        scss/sass files). Each result is then reduced into a list of unique\n        directory paths. If the scanned directories consists in a single result,\n        then the system suggest to use that path as \"styles\" value.\n\n        The result is then persisted as a local `.yeomanrc` JSON file, along the\n        generation of a Yeoman Gruntfile.\n\n    Example:\n        yeoman init gruntfile:jekyll\n\n        This will create:\n            Gruntfile.js\n            .yeomanrc\n\n\n",
  "_id": "yeoman-jekyll@0.0.1",
  "dist": {
    "shasum": "e7f97e08ffa0515caaa3e71fe8ff3273a915e1d4"
  },
  "_from": "http://github.com/mklabs/yeoman-jekyll/tarball/master"
}
